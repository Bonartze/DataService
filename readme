Программа содержит 3 основных классов: Client, Server, UnitTests.
Client - класс симуляции запросов клиента.
Server - класс-обработчик запросов.
UnitTests - класс с юнит тестами для сервера.

Атрибуты класса Server
NameDataBase - название базы данных.
sqlite3 *DataBase - указатель на БД.
std::vector<std::string> tables - названия таблиц содержащихся в БД.
bool Server::CreateTable(std::string filename) - в качестве параметра принимает название файла, возвращает true, если таблица создалась успешно.
std::string FiltrationBy(std::string, std::string) - в качетве параметров принимает условие фильтрации и название файла, возвращает строки таблицы, удовлетворяющие заданному условию.
std::string SortBy(std::string, std::string) - в качестве параметров принимает условие сортирвоки и название файла, возвращает таблицу в виде строки.
std::unordered\_map<std::string, std::string> ColumnsInfo() - возвращает названия колонок каждой из таблиц, которые на данный момент находятся в БД.
Все остальные методы в классе являются вспомогательными.

Атрибуты класса Client
static Server *server - указатель на сервер-обработчик (для каждого клиента - один и тот же, БД - тоже).
std::string request - запрос пользователя (запрос вводится с класиатуры через метод GetRequest:
Допустимые формы запроса:
 1) POST { "filename" } - создает таблицу в БД.
 2) GETFIL { "filename", "filter" } - получает строки таблицы по заданному фильтру.
 3) GETSORT { "filename","sortBy" } - получает отсортированную таблицу.
 4) GETCOLUMN { "filename" } - получает информацию о колонках всех таблиц.
void ClearServer() - удаляет БД вместе со всеми, содержащимися в ней таблицами.
std::string GetRequest() - позволяет пользователю ввести запрос с клавиатуры (исключения не предусмотрены).

Атрибуты класса UnitTests (класс реализован с помощью библиотеки GoogleTest:
void InitTests(int, char **) - инициализирует библиотеку.
int RunTests() - выполняет все заданные тесты.
                           
Также реализованы 3 вспомогательных класса исключений, унаследованные от std::exception и переопределяющие его метод const char *what() const:
BadDrop exception
BadPrepare exception
BadEdit exception
В текущем репозитории также представлена диаграмма классов UML (ClassInheritanceUML).
